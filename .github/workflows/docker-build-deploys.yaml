name: Build, Push Docker Image, and Deploy to GKE

on:
  push:
    branches:
      - master # Trigger on push to the master branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v2

      # Setup Google Cloud SDK
      - name: Install the gcloud CLI
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: ${{ secrets.GOOGLE_PROJECT }}
          service_account_key: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
          install_components: "gke-gcloud-auth-plugin"
          export_default_credentials: true

      # Authenticate Docker with Google Cloud
      - name: Authenticate Docker
        run: gcloud auth configure-docker asia-southeast1-docker.pkg.dev

      # Encode apps.json to base64
      - name: Encode apps.json
        run: |
          export APPS_JSON_BASE64=$(base64 -w 0 apps.json)
          echo "APPS_JSON_BASE64=$APPS_JSON_BASE64" >> $GITHUB_ENV

      # Build and push the Docker image
      - name: Build and Push Docker Image
        env:
          GOOGLE_PROJECT: ${{ secrets.GOOGLE_PROJECT }}
        run: |
          docker build \
            --no-cache \
            --build-arg=FRAPPE_PATH=https://github.com/frappe/frappe \
            --build-arg=FRAPPE_BRANCH=version-15 \
            --build-arg=APPS_JSON_BASE64=$APPS_JSON_BASE64 \
            --tag=asia-southeast1-docker.pkg.dev/${{ secrets.GOOGLE_PROJECT }}/demo/nginx:latest \
            --file=frappe_docker/images/layered/Containerfile .
          docker push asia-southeast1-docker.pkg.dev/${{ secrets.GOOGLE_PROJECT }}/demo/nginx:latest

      # Deploy NFS Provisioner
      - name: Deploy NFS Provisioner
        run: |
          gcloud container clusters get-credentials cicd --region asia-southeast1
          kubectl create namespace nfs || true
          helm repo add nfs-ganesha-server-and-external-provisioner https://kubernetes-sigs.github.io/nfs-ganesha-server-and-external-provisioner
          helm repo update
          helm upgrade --install -n nfs in-cluster nfs-ganesha-server-and-external-provisioner/nfs-server-provisioner \
            --set 'storageClass.mountOptions={vers=4.1}' \
            --set persistence.enabled=true \
            --set persistence.size=32Gi

      # Deploy ERPNext using Helm
      - name: Deploy ERPNext with Helm
        run: |
          gcloud container clusters get-credentials cicd --region asia-southeast1
          kubectl create namespace erpnext || true
          helm repo add frappe https://helm.erpnext.com
          helm repo update
          helm upgrade --install frappe-bench --namespace erpnext -f frappe_helm/erpnext/values.yaml frappe/erpnext \
            --set image.repository=asia-southeast1-docker.pkg.dev/${{ secrets.GOOGLE_PROJECT }}/demo/nginx \
            --set image.tag=latest
